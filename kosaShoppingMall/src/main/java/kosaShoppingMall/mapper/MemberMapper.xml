<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kosaShoppingMall.mapper.MemberMapper">
<select id="memberAutoNum" resultType="String">
	select concat('kosa',nvl(max(substr(member_num,5)), 100000) + 1)
	from member
</select>

<insert id="memberInsert" parameterType="memDTO">
	insert into member (member_num, member_id, member_name, member_pw, member_addr, member_birth, member_email, gender, member_regist, member_phone)
	values (#{memberNum}, #{memberId}, #{memberName}, #{memberPw}, #{memberAddr}, #{memberBirth}, #{memberEmail}, #{gender}, #{memberRegist}, #{memberPhone})
</insert>

<select id="selectAll" resultType="memDTO" parameterType="startEndPageDTO">
select *
from (select rownum rn, member_num memberNum, member_id memberId, member_pw memberPw, member_name memberName, member_addr memberAddr, member_birth memberBirth, member_phone memberPhone, member_regist memberRegist, gender, member_email memberEmail
	 from member
	 order by member_num desc)
where rn between #{startRow} and #{endRow}
</select>

<select id="selectOne" resultType="memDTO" parameterType="String">
	select member_num memberNum, member_id memberId, member_pw memberPw, member_name memberName, member_addr memberAddr, member_birth memberBirth, member_phone memberPhone, member_regist memberRegist, gender, member_email memberEmail
	from member
	where member_num = #{memberNum}
</select>

<update id="memberUpdate" parameterType="memDTO">
	update member
	set member_id = #{memberId}, member_pw = #{memberPw}, member_name = #{memberName}, member_addr = #{memberAddr}, gender = #{gender}, member_phone = #{memberPhone}, member_birth = #{memberBirth}, member_email = #{memberEmail}, member_regist = #{memberRegist}
	where member_num = #{memberNum}
</update>

<delete id="memberDel" parameterType="String">
 	delete from member
 	where member_num = #{memberNum}
</delete>

<insert id="memberJoin" parameterType="memDTO">
 	insert into member (member_num, member_id, member_name, member_pw, member_addr, member_birth, member_email, gender, member_phone, member_regist)
	values (#{memberNum}, #{memberId}, #{memberName}, #{memberPw}, #{memberAddr}, #{memberBirth}, #{memberEmail}, #{gender}, #{memberPhone}, sysdate)
</insert>

<select id="loginSelect" parameterType="String" resultType="authInfo">
	select member_id userId, member_pw userPw, 'mem' grade
	from member
	where member_id = #{userId}
	union
	select emp_id, emp_pw, 'emp'
	from employees
	where emp_id = #{userId}
</select>

<select id="selectOneById" resultType="memDTO" parameterType="String">
	select member_num memberNum, member_id memberId, member_pw memberPw, member_name memberName, member_addr memberAddr, member_birth memberBirth, member_phone memberPhone, member_regist memberRegist, gender, member_email memberEmail
	from member
	where member_id = #{memberId}
</select>

<update id="memberModify">
	update member
	set member_id = #{memberId}, member_pw = #{memberPw}, member_name = #{memberName}, member_addr = #{memberAddr}, gender = #{gender}, member_phone = #{memberPhone}, member_birth = #{memberBirth}, member_email = #{memberEmail}, member_regist = #{memberRegist}
	where member_num = #{memberNum}
</update>

<update id="pwUpdate" parameterType="memDTO">
 	update member
	set member_pw = #{memberPw}
	where member_num = #{memberNum}
</update>

<!-- ======== 여러개 삭제 ========= -->
<!-- 1. 배열을 이용 -->
<delete id="memDels" parameterType="hashMap">
 	delete from member
 	<where>
 	member_num in
 	<foreach collection="deletes" item="memberNum" index="index" open="(" close=")" separator=",">
 		#{memberNum}
 	</foreach>
 	</where>
</delete>

<!-- 2. 리스트 이용 -->
<delete id="memDels2" parameterType="hashMap">
 	delete from member
 	<where>
 	member_num in
 	<foreach collection="cs" item="memberNum" index="index" open="(" close=")" separator=",">
 		#{memberNum}
 	</foreach>
 	</where>
</delete>

<!-- 2. map 이용 -->
<delete id="memDels3" parameterType="hashMap">
 	delete from member
 	<where>
 	member_num in
 	<foreach collection="memberNums" item="memberNum" index="index" open="(" close=")" separator=",">
 		#{memberNum}
 	</foreach>
 	</where>
</delete>

<!-- 페이징에 필요한 전체개수 -->
<select id="memberCount" resultType="int">
select count(*) from member
</select>

</mapper>