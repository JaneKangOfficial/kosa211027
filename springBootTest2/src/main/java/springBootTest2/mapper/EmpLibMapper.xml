<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="springBootTest2.mapper.EmpLibMapper">
<insert id="empLibInsert" parameterType="springBootTest2.domain.EmpLibDTO">
	insert into emp_library (lib_num, lib_writer, lib_subject, lib_content, lib_pw, emp_num, ip_addr, original_file_name, store_file_name, file_size)
	values (seq_num1.nextval, #{libWriter}, #{libSubject}, #{libContent}, #{libPw}, #{empNum}, #{ipAddr}, #{originalFileName}, #{storeFileName}, #{fileSize})
</insert>

<select id="selectEmpNum" resultType="integer" parameterType="string">
	select emp_num
	from employees
	where emp_id = #{empId}
</select>

<select id="selectAll" resultType="springBootTest2.domain.EmpLibDTO">
	select lib_num libNum, lib_writer libWriter, lib_subject libSubject, lib_content libContent, lib_pw libPw, emp_num empNum, ip_addr ipAddr, original_file_name originalFileName, store_file_name storeFileName, file_size fileSize
	from emp_library
	order by lib_num desc
</select>

<select id="selectOne" parameterType="integer" resultType="springBootTest2.domain.EmpLibDTO">
 	select lib_num libNum, lib_writer libWriter, lib_subject libSubject, lib_content libContent, lib_pw libPw, emp_num empNum, ip_addr ipAddr, original_file_name originalFileName, store_file_name storeFileName, file_size fileSize
	from emp_library
	where lib_num = #{libNum}
</select>

<update id="libUpdate" parameterType="springBootTest2.domain.EmpLibDTO">
	update emp_library
	set lib_writer = #{libWriter}, lib_subject = #{libSubject}, lib_content = #{libContent}, lib_pw = #{libPw}, emp_num = #{empNum}, original_file_name = #{originalFileName}, store_file_name = #{storeFileName}, file_size = #{fileSize}
	where lib_num = #{libNum}
</update>

<delete id="libDel" parameterType="Integer">
	delete from emp_library
	where lib_num = #{libNum}
</delete>
</mapper>